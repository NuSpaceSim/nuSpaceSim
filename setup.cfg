[metadata]
name = nuspacesim
description = A Simulator for Space-based Neutrino Detections
long_description = file: README.md
long_description_content_type = text/markdown
author = Alex Reustle
author_email = alexander.reustle@nasa.gov
license = BSD-3-Clause-Clear
license_file = LICENSE.txt
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Programming Language :: C++
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
keywords =
    NASA
    neutrinos
    Simulation

[options]
packages = find:
install_requires =
    astropy>=4.3
    click
    dask
    dask[distributed]
    h5py
    lxml
    matplotlib
    numpy>=1.20
    quadpy
    rich
    scipy
    cached-property;python_version<"3.8"
    importlib-metadata;python_version<"3.8"
    importlib-resources;python_version<"3.9"
python_requires = >=3.7
ext_package = nuspacesim
include_package_data = True
package_dir =
    = src
zip_safe = False

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    nuspacesim = nuspacesim.apps.cli:cli

[options.package_data]
nuspacesim.data.nupyprop_tables =
    nu2tau_cdf.hdf5
    nu2tau_pexit.hdf5
nuspacesim.data.radio_params =
    ionosphere_params.hdf5
    waveform_params.hdf5
nuspacesim.data.renonu2tautables = nu2taudata.hdf5

[bdist_wheel]
universal = 0

[tox:tox]
envlist =
    py{37,38,39}
    docs
isolated_build = True

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39

[testenv]
deps =
    pytest
commands =
    pytest {posargs:--verbose}

[testenv:docs]
description = invoke sphinx-build to build HTML docs
basepython = python3.9
deps =
    sphinx
    sphinx-panels
    sphinx-rtd-theme
commands = python -m sphinx -v -T -E -W --keep-going -bhtml -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
